/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
import DocumentService from"@typo3/core/document-service.js";import Notification from"@typo3/backend/notification.js";import RegularEvent from"@typo3/core/event/regular-event.js";import SortableTable from"@typo3/backend/sortable-table.js";var Selectors,Identifier;!function(e){e.linktypesSelectorCheck='.t3js-linkvalidator-settings input[type="checkbox"].options-by-type-check',e.actionButtonSelectorCheck=".t3js-linkvalidator-action-button-check",e.toggleAllLinktypesSelectorReport='.t3js-linkvalidator-settings input[type="checkbox"].options-by-type-toggle-all-report',e.linktypesSelectorReport='.t3js-linkvalidator-settings input[type="checkbox"].options-by-type-report',e.actionButtonSelectorReport=".t3js-linkvalidator-action-button-report"}(Selectors||(Selectors={})),function(e){e.toggleAllLinktypesIdReport="options-by-type-toggle-all-report",e.brokenLinksTableIdReport="typo3-broken-links-table"}(Identifier||(Identifier={}));class Linkvalidator{constructor(){DocumentService.ready().then((()=>{const e=document.getElementById(Identifier.brokenLinksTableIdReport);null!==e&&e instanceof HTMLTableElement&&new SortableTable(e)})),this.initializeEvents()}static allCheckBoxesAreChecked(e){const t=Array.from(e);return e.length===t.filter((e=>e.checked)).length}toggleActionButtonReport(){document.querySelector(Selectors.actionButtonSelectorReport)?.toggleAttribute("disabled",!document.querySelectorAll('input[type="checkbox"]:checked').length)}toggleTriggerCheckBoxReport(){const e=document.querySelectorAll(Selectors.linktypesSelectorReport);document.getElementById(Identifier.toggleAllLinktypesIdReport).checked=Linkvalidator.allCheckBoxesAreChecked(e)}initializeEvents(){new RegularEvent("change",((e,t)=>{const o=document.querySelectorAll(Selectors.linktypesSelectorReport),n=!Linkvalidator.allCheckBoxesAreChecked(o);o.forEach((e=>{e.checked=n})),t.checked=n,this.toggleActionButtonReport()})).delegateTo(document,Selectors.toggleAllLinktypesSelectorReport),new RegularEvent("change",(()=>{this.toggleTriggerCheckBoxReport(),this.toggleActionButtonReport()})).delegateTo(document,Selectors.linktypesSelectorReport),new RegularEvent("click",((e,t)=>{Notification.success(t.dataset.notificationMessage||"Event triggered","",2)})).delegateTo(document,Selectors.actionButtonSelectorCheck),new RegularEvent("click",((e,t)=>{Notification.success(t.dataset.notificationMessage||"Event triggered","",2)})).delegateTo(document,Selectors.actionButtonSelectorReport)}}export default new Linkvalidator;